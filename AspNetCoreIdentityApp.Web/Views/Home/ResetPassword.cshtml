
@{
    ViewData["Title"] = "ResetPassword";
}
@model ResetPasswordViewModel

<script>
    // Query the elements
    const passwordEle = document.getElementById('password');
    const toggleEle = document.getElementById('toggle');

    toggleEle.addEventListener('click', function () {
        const type = passwordEle.getAttribute('type');

        passwordEle.setAttribute(
            'type',
            // Switch it to a text field if it's a password field
            // currently, and vice versa
            type === 'password' ? 'text' : 'password'
        );
    });
</script>

<div class="row">
    <div class="col-md-6 offset-md-3">
        <h2>Yeni Şifre Oluşturma</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-info" role="alert">
                @TempData["SuccessMessage"]
            </div>
        }
        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
        <form method="post">
            <div class="mb-3">
                <label for="Password" class="col-md-4 col-form-label" asp-for="Password"></label>
                <input asp-for="Password" class="form-control">
                <span class="text-danger" asp-validation-for="Password"></span>
            </div>
            <div class="mb-3">

                <div class="toggle">
                    <label for="PasswordConfirm" class="col-md-4 col-form-label" asp-for="PasswordConfirm"></label>
                    <input asp-for="PasswordConfirm" class="form-control">
                    <span class="text-danger" asp-validation-for="PasswordConfirm"></span>
                </div>
               
            </div>
            <div class="col-md-8">
                <button type="submit" id="toggle" class="btn btn-primary">Şifre Yenile</button>
            </div>
        </form>
    </div>
</div>

